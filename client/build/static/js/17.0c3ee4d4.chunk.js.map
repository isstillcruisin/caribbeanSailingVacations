{"version":3,"sources":["components/Page/Page.js","components/Page/index.js"],"names":["Header","React","lazy","__webpack_require__","e","then","bind","Meta","theme","red","black","grey","lightgrey","offWhite","transparentGrey","turquoise","maxWidth","bs","StyledPage","styled","div","_templateObject","props","injectGlobal","_templateObject2","Page","state","userToken","mounted","displayAuthOptions","_this","handleUserExistance","_callee","regenerator_default","a","wrap","_context","prev","next","setState","abrupt","sent","stop","this","ls","get","prevProps","prevState","token","Inner","withReveal","_templateObject3","react_default","createElement","Fade_default","bottom","opposite","when","styled_components_browser_esm","display","loggedIn","children","Component","withRouter","d","__webpack_exports__","components_Page_Page"],"mappings":"49BAMA,IAAMA,EAASC,IAAMC,KAAK,kBAAMC,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,aAC1BC,EAAON,IAAMC,KAAK,kBAAMC,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,aAExBE,EAAQ,CACZC,IAAK,UACLC,MAAO,UACPC,KAAM,UACNC,UAAW,UACXC,SAAU,UACVC,gBAAiB,wBACjBC,UAAW,UACXC,SAAU,SACVC,GAAI,qCAGAC,EAAaC,IAAOC,IAAVC,IACA,SAAAC,GAAK,OAAIA,EAAMd,MAAMM,iBAC1B,SAAAQ,GAAK,OAAIA,EAAMd,MAAMK,WAIhCU,YAAYC,IAkBChB,EAAMK,cAKbY,6MACJC,MAAQ,CACNC,WAAW,EACXC,SAAS,KA+BXC,mBAAqB,WACnB,QAAOC,EAAKJ,MAAMC,aAGpBI,yCAAsB,SAAAC,IAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACPR,EAAKS,SAAS,CAAEZ,WAAW,IADpB,cAAAS,EAAAI,OAAA,SAAAJ,EAAAK,MAAA,wBAAAL,EAAAM,SAAAV,EAAAW,4FA7BpB,OAFeC,IAAGC,IAAI,gBAAiB,EAGnCF,KAAKJ,SAAS,CACZZ,WAAW,IAEbgB,KAAKJ,SAAS,CAAEZ,WAAW,+CAGdmB,EAAWC,GAC5B,IAAIC,EAAQJ,IAAGC,IAAI,gBAAiB,EAC/BE,EAAUpB,UAIJoB,EAAUpB,YACdqB,GACHL,KAAKJ,SAAS,CAAEZ,WAAW,KALzBqB,GACFL,KAAKZ,mEAUTY,KAAKJ,SAAS,CACZX,SAAS,qCAYX,IAAIoB,EAAQJ,IAAGC,IAAI,cACbI,EAAQC,IACZ/B,IAAOC,IADe+B,IAEP,SAAA7B,GAAK,OAAIA,EAAMd,MAAMQ,WAIpCoC,EAAAlB,EAAAmB,cAACC,EAAApB,EAAD,CAAMqB,QAAM,EAACC,UAAQ,EAACC,KAAMd,KAAKjB,MAAME,WAEzC,OACEwB,EAAAlB,EAAAmB,cAACK,EAAA,EAAD,CAAelD,MAAOA,GACpB4C,EAAAlB,EAAAmB,cAACnC,EAAD,KACEkC,EAAAlB,EAAAmB,cAAC9C,EAAD,MACA6C,EAAAlB,EAAAmB,cAACrD,EAAD,CAAQ2D,QAAShB,KAAKd,mBAAoB+B,SAAUZ,IACpDI,EAAAlB,EAAAmB,cAACJ,EAAD,KAAQN,KAAKrB,MAAMuC,mBAzDVC,aAgEJC,cAAWtC,GClH1BtB,EAAA6D,EAAAC,EAAA,4BAAAC","file":"static/js/17.0c3ee4d4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styled, { ThemeProvider, injectGlobal } from \"styled-components\";\nimport ls from \"local-storage\";\nimport { withRouter } from \"react-router-dom\";\nimport Fade from \"react-reveal/Fade\";\nimport withReveal from \"react-reveal/withReveal\";\nconst Header = React.lazy(() => import(\"../Header\"));\nconst Meta = React.lazy(() => import(\"../Meta\"));\n\nconst theme = {\n  red: \"#FF0000\",\n  black: \"#393939\",\n  grey: \"#3A3A3A\",\n  lightgrey: \"#E1E1E1\",\n  offWhite: \"#EDEDED\",\n  transparentGrey: \"rgba(.3, .3, .3, .09)\",\n  turquoise: \"#2DECB1\",\n  maxWidth: \"1000px\",\n  bs: \"0 12px 24px 0 rgba(0, 0, 0, 0.09)\"\n};\n\nconst StyledPage = styled.div`\n  background: ${props => props.theme.transparentGrey};\n  color: ${props => props.theme.offWhite};\n  height: 100%;\n`;\n\ninjectGlobal`\n  html {\n    box-sizing: border-box;\n    font-size: 10px;\n  }\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n  body {\n    padding: 0;\n    margin: 0;\n    font-size: 1.5rem;\n    line-height: 2;\n    font-family: 'radnika_next';\n    background-color: whitesmoke;\n  }\n  a {\n    text-decoration: none;\n    color: ${theme.offWhite};\n  }\n  button {  font-family: 'radnika_next'; }\n`;\n\nclass Page extends Component {\n  state = {\n    userToken: false,\n    mounted: false\n  };\n\n  componentDidMount() {\n    let loggedIn = ls.get(\"user-token\") || false;\n\n    return loggedIn\n      ? this.setState({\n          userToken: true\n        })\n      : this.setState({ userToken: false });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let token = ls.get(\"user-token\") || false;\n    if (!prevState.userToken) {\n      if (token) {\n        this.handleUserExistance();\n      }\n    } else if (prevState.userToken) {\n      if (!token) {\n        this.setState({ userToken: false });\n      }\n    }\n  }\n\n  componentWillMount() {\n    this.setState({\n      mounted: true\n    });\n  }\n  displayAuthOptions = () => {\n    return this.state.userToken ? true : false;\n  };\n\n  handleUserExistance = async () => {\n    return await this.setState({ userToken: true });\n  };\n\n  render() {\n    let token = ls.get(\"user-token\");\n    const Inner = withReveal(\n      styled.div`\n        max-width: ${props => props.theme.maxWidth};\n        margin: 0 auto;\n        padding: 2rem;\n      `,\n      <Fade bottom opposite when={this.state.mounted} />\n    );\n    return (\n      <ThemeProvider theme={theme}>\n        <StyledPage>\n          <Meta />\n          <Header display={this.displayAuthOptions} loggedIn={token} />\n          <Inner>{this.props.children}</Inner>\n        </StyledPage>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default withRouter(Page);\n","export { default } from \"./Page\";\n"],"sourceRoot":""}